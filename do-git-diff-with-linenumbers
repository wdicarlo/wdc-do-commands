#!/usr/bin/env bash

# credits: https://stackoverflow.com/questions/24455377/git-diff-with-line-numbers-git-log-with-line-numbers

# Usage help function
cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-q] [-b] [-s] [-w] [-c]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -w                          : exclude whitespaces"
    echo "       -b                          : git diff of the branch"
    echo "       -s                          : git diff of staged changes"
    echo "       -c                          : output cfile format"
    echo "       -q                          : quiet"
}

# Arguments processing
quiet=0
mode=0  # 0 = WIP, 1 = STAGED, 2 = BRANCH
options=""
cfile=0
while getopts hqbswc flag
do
    case $flag in
	w)
	    options="$options -w"
	    ;;
	c)
	    cfile=1
	    ;;
	b)
	    mode=2
	    ;;
	s)
	    mode=1
	    ;;
	q)
	    quiet=1
	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

# Massage the @@ counts so they are usable
function prep1() {
   cat | awk -F',' 'BEGIN { convert = 0; }
       /^@@ / { convert=1; }
       /^/  { if ( convert == 1 ) { print $1,$2,$3;
              } else { print $0;
              }
              convert=0;
             }'
}

# Extract all new changes added with the line count
function prep2() {
  cat | awk 'BEGIN { display=0; line=0; left=0; out=1;}
     /^@@ / { out=0; inc=0; line=$4; line--; display=line; left=line;        }
     /^[-]/   { left++; display=left; inc=0; }
     /^[+]/   { line++; display=line; inc=0; }
     /^[-+][-+][-+] / { out=0; inc=0; }
     /^/    { 
               line += inc;
               left += inc;
               display += inc;
               if ( out == 1 ) {
                   print display,$0;
               } else {
                   print $0;
               }
               out = 1;
               inc = 1;
               display = line;
            }'
} 

function diff2cfile() {
	cat | grep -v "^+++ \|^--- \|^@@ \|^[0-9]\+ index"| sed 's#^[0-9]\+ diff --git .*a/\(.*\) b/.*#file: \1#'|awk '/^file/ { afile=$2; next; } /[0-9]* [+-]/ { print afile":"$1":"substr($0, index($0,$2)); }'
}

prep3="cat"
if [ $cfile -eq 1 ]; then
	prep3="diff2cfile"
fi


case $mode in 
	0)
		git diff $options $@ | prep1 | prep2 | $prep3
		;;
	1)
		git diff $options --staged $@ | prep1 | prep2 | $prep3
		;;
	2)
		parent=$(do-git-get-parent-branch)
		branch=$(do-git-branch -n)
		options="$options -p"
		cmd="git log --oneline --decorate --first-parent --no-merges $options $parent..$branch $@"
		eval "$cmd" | prep1 | prep2 | $prep3
		;;
esac

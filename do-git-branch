#!/usr/bin/env bash

# TODO:
# git cherry -v master mybranch # list commits not merged


cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-q]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -s <ref_branch>             : print branch merge status"
    echo "       -q                          : quiet"
}

# if [ $# == 0 ]; then
#     usage
#     exit
# fi

quiet=0
merge=""
while getopts hqs: flag
do
    case $flag in
	s)
	    merge=$OPTARG
	    ;;
	q)
	    quiet=1
	    ;;
#	e)
#	    exclude=$OPTARG
#	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument


if [ "$merge" == "" ]; then
	cmd="echo \"Branches not merged:\"; git branch -vv --no-merged; echo \"Branches already merged:\"; git branch -vv --merged"
	# Quieting command output
	if [ $quiet -eq 0 ]; then
	    echo "> $cmd"
	fi
	eval $cmd
	exit
fi


git branch | grep -v $merge | xargs -I@ sh -c "echo \"\$(git log --oneline --no-merges $merge..@|wc -l) @\"" | sort -r

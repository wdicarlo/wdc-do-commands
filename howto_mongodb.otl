MongoDB NoSql
	JSON NoSql data store
Start MongoDB server
	docker run --name mongo-server -d mongo:4.1.6-xenial
Print server status
	docker run -it --link mongo-server:mongo --rm mongo mongo --host mongo --eval "printjson(db.serverStatus())"
List all entries of collection inventory in the database mydemo
	docker run -it --link mongo-server:mongo --rm mongo mongo mydemo --host mongo --eval "db.inventory.find({}).toArray()"
Add an item to the inventory collection of the mydemo database
	docker run -it --link mongo-server:mongo --rm mongo mongo mydemo --host mongo --eval 'db.inventory.insertOne( { "item" : "boxes", "qty" : 53, "tags" : ["plastic"], "size" : { "h" : 35, "w" : 43, "uom" : "cm" } })'
Drop mydemo database
	docker run -it --link mongo-server:mongo --rm mongo mongo mydemo --host mongo --eval "printjson(db.dropDatabase())"
Import json data
	docker cp inventory.json mongo-server:/data/
	docker exec mongo-server mongoimport --db mydemo --collection inventory --type json --file /data/inventory.json --jsonArray
Find all items which have the item field starting with the letter l
	do-mongo inventory 'find({item: { $regex: /^l/m } } )' # m is needed for patterns that need to use anchors like ^ (bol) or $ (eol)
Find all items not containing devops in the web_url field
	do-mongo projects 'find({web_url: { $not: /devops/ }  } ).toArray()' | grep web_url
Print only id, web_url and name of the projects with the name contains the word core
	do-mongo projects 'find({name: /core/},{_id: 0, id: 1, web_url: 1, name: 1}).toArray()'

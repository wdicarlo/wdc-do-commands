#!/usr/bin/env bash
# Usage help function
cmd=`basename $0`

[ "$WDC_DO_COMMANDS_DIR" == "" ] && echo "Missing WDC_DO_COMMANDS_DIR" && exit
export WDC_DO_COMMANDS_BIN="${WDC_DO_COMMANDS_DIR}/bin"

function usage() {
  echo "Usage: $cmd [-h] [-t] [-T] [<grep_pattern>]"
  echo "where:"
  echo "       -h                          : print this help"
  echo "       -t                          : pretty print"
  echo "       -T                          : print command type; function or file"
  echo "       -u                          : update the index"
}

# Arguments processing
otable=0
update=0
ctype=0
while getopts htuT flag
do
  case $flag in
    u)
      update=1
      ;;
    T)
      ctype=1
      ;;
    t)
      otable=1
      ;;
    h)
      usage
      exit
      ;;
    ?)
      usage
      exit
      ;;
  esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument


idxfile="$(echo $WDC_DO_COMMANDS_BIN/do_cmd_index.csv)"
[ ! -f "$idxfile" ] && update=1 # force the creation of the index
if [ $update -eq 1 ]; then
  declare -A cmds
  if [ -f "$WDC_DO_COMMANDS_BIN/do_cmd_index_def.csv" ]; then
    # load pre-defined index
    for line in $(cat "$WDC_DO_COMMANDS_BIN/do_cmd_index_def.csv"|grep -v "^[ \t]*$")
    do
      idx=$(echo "$line"|cut -d';' -f1)
      [ ! "${cmds[$idx]}" == "" ] && echo "Bad predefined commands index" && exit 1
      cmd=$(echo "$line"|cut -d';' -f2)
      cmds["$idx"]="$cmd"
      echo "Predefined: $idx -> $cmd"
    done
  fi
  (
    for cmd in $(ls -1 "$WDC_DO_COMMANDS_BIN" | grep "^do-"| grep -v "\.sav$";declare -F | grep "do-" | cut -d' ' -f 3)
    do
      [ $(cat "$WDC_DO_COMMANDS_BIN/do_cmd_index_def.csv"|cut -d';' -f2|grep -c "^$cmd$") -gt 0 ] && continue
      idx=""
      for w in $(echo "$cmd" | tr '-' ' '); 
      do 
        idx="${idx}$(echo $w|head -c 1)"
      done
      if [ ! "${cmds[$idx]}" == "" ]; then
        num=$(echo "$cmd" | tr '-' ' ' | wc -w)
        word=$(echo "$cmd" | cut -d'-' -f $num)
        for ((i=2; i<=${#word}; i++)); do
          nidx="${idx::-1}$(echo $word | head -c $i)"
          [ "${cmds[$nidx]}" == "" ] && break
        done
        idx="$nidx"
      fi
      cmds["$idx"]="$cmd"
      echo "$idx;$cmd" 
    done; 
    cat "$WDC_DO_COMMANDS_BIN/do_cmd_index_def.csv"
  ) | grep -v "^[ \t]*$" | sort -t';' -k 1 > "$idxfile"
fi

[ $# -gt 1 ] && usage && exit
[ $# -eq 1 ] && [ $otable -eq 1 ] && cat "$idxfile" | grep "$1" | column -t -s';' && exit
[ $# -ge 0 ] && [ $ctype -eq 1 ] && cat "$idxfile" | grep "${1:-.}" | while IFS=';' read -r idx cmd; do echo "$idx;$cmd;$(type -t $cmd)"; done && exit
[ $otable -eq 1 ] && cat "$idxfile" | column -t -s';' && exit
[ $# -eq 1 ] && cat "$idxfile" | grep "$1" && exit

[ $# -eq 0 ] && cat "$idxfile" 

#!/usr/bin/env bash

# Usage help function
cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-v] [-l] [-n] <dot-pattern> [<par>..]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -l                          : list"
    echo "       -n                          : do not execute the command"
    echo "       -v                          : verbose"
}

# Arguments processing
quiet=0
list=0
exe=1
while getopts hvln flag
do
    case $flag in
	x)
	    exe=0
	    ;;
	l)
	    list=1
	    ;;
	v)
	    quiet=0
	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ $# == 0 ]; then
    usage
    exit
fi

if [ $exe -eq 0 ]; then
	quiet=0
fi

cp=$(pwd)
cd ~/bin

pattern="do"
for patt in $(echo $1| tr '-' '\n')
do
	if [ "${patt: -1}" == "$" ]; then
		pattern="$pattern-$patt"
	else
		pattern="$pattern-$patt[a-z]*"
	fi
done
shift

if [ $list -eq 1 ]; then
	cmd="find . -maxdepth 1 -name \"do-*\" | tr -d './' | grep \"$pattern\""
	if [ "$cmd" == "" ]; then
		echo "Command not found"
		exit
	fi
	cmd="$cmd"
	echo "> $cmd"
	eval $cmd
	exit
fi

num=$(find . -maxdepth 1 -name "do-*" | tr -d './' | grep "$pattern" | wc -l)

if [ $num -gt 1 ]; then
	find . -maxdepth 1 -name "do-*" | tr -d './' | grep "$pattern" | awk '{ print NR, $0 }' 
	read -p "Command?: " selected
	if [ "$selected" == "" ]; then
	    exit
	fi
	num=$( find . -maxdepth 1 -name "do-*" | tr -d './' | grep "$pattern" | awk '{ print NR, $0 }' | grep "^$selected" | awk '{print $2}' | wc -l) 
	if [ $num -ne 1 ]; then
		echo "Wrong command"
		exit
	fi
	cmd=$(find . -maxdepth 1 -name "do-*" | tr -d './' | grep "$pattern" | awk '{ print NR, $0 }' | grep "^$selected" | awk '{print $2}') 
else
	cmd=$(find . -maxdepth 1 -name "do-*" | tr -d './' | grep "$pattern")
fi


if [ "$cmd" == "" ]; then
	echo "Command not found"
	exit
fi
cmd="$cmd $@"

cd "$cp"

# Quieting command output
if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
if [ $exe -eq 1 ]; then
	eval $cmd
fi


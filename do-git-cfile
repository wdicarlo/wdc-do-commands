#!/usr/bin/env bash

old=1
new=1
while getopts hqon flag
do
    case $flag in
        o)
            old=0
            ;;
        n)
            new=0
            ;;
        q)
            quiet=1
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ $old -eq 0 ] && [ $new -eq 0 ]; then
    echo "Cannot remove both old and new lines"
    exit
fi

files=$(git status -s -uno | awk '{ print $2 }')
for file in $files;
do
    if [ -f $file ]; then
    	orig="/tmp/$(basename $file).tmp"
        git show HEAD:$file > $orig

        if [ $old -eq 1 ] && [ $new -eq 1 ]; then
            diff --unchanged-line-format="" --old-line-format="$file:%dn: %L" --new-line-format="$file:%dn: %L" $file $orig | sort -t':' -k2,2 -n
        elif [ $old -eq 0 ]; then
            diff --unchanged-line-format="" --old-line-format="" --new-line-format="$file:%dn: %L" $file $orig | sort -t':' -k2,2 -n
        elif [ $new -eq 0 ]; then
            diff --unchanged-line-format="" --old-line-format="$file:%dn: %L" --new-line-format="" $file $orig | sort -t':' -k2,2 -n
        fi
        rm $orig
    fi
done

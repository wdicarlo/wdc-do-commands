#!/usr/bin/env bash


# TODO: add option to list modified files
# do-svn-status | do-pipe-trimmed -a | do-pipe-columns 2 | xargs -I@ sh -c "if [ -f @ ]; then echo @; fi"

function usage() 
{
    cmd=`basename $0`
    echo "Usage: $cmd [-h] [-a] [-u] [-m|-d] [-p]"
    echo "            -h            : this help"
    echo "            -a            : print all"
    echo "            -u            : show updates"
    echo "            -m            : show merges"
    echo "            -d            : show diffs"
    echo "            -p            : list paths"
    echo "            -q            : quiet"
    echo ""
    echo "Subversion Status Symbols:"
    echo "A        : Added"
    echo "U        : Updated"
    echo "D        : Deleted"
    echo "M        : Modified"
    echo "R        : Item replaced"
    echo "C        : In conflict"
    echo "X        : Externals definition"
    echo "I        : Ignored"
    echo "?        : Not in repository"
    echo "!        : Item missing"
    echo "~        : Object type changed"
    echo " U       : File or folder properties Updated"
    echo " C       : File or folder properties in conflict"
    echo " M       : File or folder properties Modified"
    echo "  L      : Working copy Locked"
    echo "   +     : History scheduled with commit"
    echo "    S    : Item with a Switched URL relative to the parent"
    echo "        *: A newer revision of the item exists on the server (--show-updates|-u)"
}

all=0
updates=0
merges=0
diffs=0
used=0
quiet=0
paths=0

if [ ! -t 1 ]; then
    quiet=1
fi
while getopts haumdqp flag
do
   case $flag in
      p)
         paths=1
         ;;
      a)
         all=1
         ;;
      d)
         if [ $used -eq 1 ]; then
            echo "ERROR: either -d or -m option can be used"
            usage
            exit
         fi
         diffs=1
         used=1
         ;;
      u)
         updates=1
         ;;
      m)
         if [ $used -eq 1 ]; then
            echo "ERROR: either -d or -m option can be used"
            usage
            exit
         fi
         merges=1
         used=1
         ;;
      q)
         quiet=1
         ;;
      h)
         usage
         exit
         ;;
      ?)
         usage
         exit
         ;;
   esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

target="."
if [ $# -gt 0 ]; then
   target="$@"
fi


opts=""
if [ $updates -eq 1 ]; then
   opts="$opts -u"
fi

cmd="svn status $opts $target | grep -v \"^?\""
if [ $merges -eq 1 ]; then
   cmd="svn merge --dry-run -r BASE:HEAD $target"
fi

if [ $diffs -eq 1 ]; then
   cmd="svn diff -r BASE:HEAD $target"
   all=0
fi

if [ $paths -eq 1 ]; then
   cmd="svn status $opts $target | grep -v \"^?\" | grep -v \"^>\|^Performing\|^[ \\t]*$\" | do-pipe-trimmed -a | do-pipe-columns 2"
fi

if [ $quiet -eq 0 ]; then
   echo "> $cmd"
fi
eval $cmd

if [ $paths -eq 1 ]; then
   exit
fi

if [ $all -eq 1 ]; then
   cmd="svn status | grep \"^?\""
   echo ""
   echo "# Untracked files:"
   echo ""
   if [ $quiet -eq 0 ]; then
      echo "> $cmd"
   fi
   eval $cmd
fi

#!/usr/bin/env bash

function usage() {
	echo "Usage: $cmd [-q] [-r] [-b <branch>] [-s]"
	echo "             -b <branch>            : show log of the branch"
	echo "             -a <author>            : show log of the author"
	echo "             -r                     : raw"
	echo "             -s                     : show files' status"
	echo "             -q                     : quiet"
}

quiet=0
raw=0
branch="--all"
author=""
files=0
if [ ! -t 1 ]; then
    quiet=1
    raw=1
fi
while getopts hqrb:a:s flag
do
    case $flag in
        s)
            files=1
            ;;
        r)
            raw=1
            ;;
        q)
            quiet=1
            ;;
        a)
            author="--author=$OPTARG"
            ;;
        b)
            branch=$OPTARG
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

graph="--graph"
details="--abbrev-commit"
if [ $files -eq 1 ]; then
	graph=""
	details="--name-status"
fi

if [ $quiet -eq 0 ]; then
    echo "> git log $author $graph $branch --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white) %an%C(reset)%C(bold yellow)%d%C(reset)' $details --date=relative $@"
fi
if [ $raw -eq 0 ]; then
    git log $author $graph $branch --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white) %an%C(reset)%C(bold yellow)%d%C(reset)' $details --date=relative $@
else
    git log $author $branch $details --date=relative --format=format:'%h - (%ar) %s %d'
fi

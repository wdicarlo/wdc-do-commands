#!/usr/bin/env bash

cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-l] [-a] [-b <branch>] [<grep_pattern>]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -l                          : just list the branches"
    echo "       -a                          : list all branches"
    echo "       -b                          : create and switch to <branch>"
    echo "       -q                          : quiet"
}

quiet=0
list=0
newbranch=""
all=0
while getopts hqlb:a flag
do
    case $flag in
	b)
	    newbranch=$OPTARG
	    ;;
	a)
	    all=1
	    ;;
	l)
	    list=1
	    ;;
	q)
	    quiet=1
	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ ! "$newbranch" == "" ]; then
	echo "Creating and switching to branch: $newbranch"
	read -p "Are you sure? (yes/[no])" ans
	if [ "$ans" == "yes" ] || [ "$ans" == "Yes" ]; then
		cmd="git checkout -b $newbranch"
		if [ $quiet -eq 0 ]; then
		    echo "> $cmd"
		fi
		eval $cmd
		exit
	fi
	exit
fi


filter=""
if [ $# -gt 0 ]; then
	filter="$1"
fi


cmd="git branch"
if [ $all -eq 1 ]; then
	cmd="$cmd -a"
fi
if [ ! $filter == "" ]; then
	cmd="$cmd | grep --color $filter"
fi


if [ $list -eq 1 ]; then
	if [ $quiet -eq 0 ]; then
	    echo "> $cmd"
	fi
	eval $cmd
	exit
fi

status=$(git status|grep Changes)
if [ ! "$status" == "" ]; then
	echo "Cannot switch. Changes are present!!!"
	git status
	exit
fi

nbranches=$(eval $cmd|wc -l)
branch=$(eval $cmd)

if [ $nbranches -ne 1 ]; then
	echo "No valid branch has been selected:"
	echo "$branch"
	exit
fi


cmd="git checkout $branch"

if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
eval $cmd

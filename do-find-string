#!/bin/bash



# if [ ! $# == 3 ] && [ ! $# == 4 ]; then
#     cmd=`basename $0`
#     echo "Usage: $cmd [-p] <root> <depth> <string>"
#     echo "where:"
#     echo "       -p just print the paths"
#     exit
# fi

cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-i] [-p] [-c ][-r <root>] [-n <depth>] [-f <file-pattern>] <string>"
    echo "where:"
    echo "       -i                 : ignore case"
    echo "       -c                 : just count occurences"
    echo "       -p                 : just print the paths"
    echo "       -r <root>          : start from root folder"
    echo "       -n <depth>         : max depth to search into"
    echo "       -f <file-pattern>  : filename pattern to use"
    echo "       -e <exclude-patt>  : exclude pattern"
    echo "       -q                 : quiet"
    exit
}

if [ $# == 0 ]; then
    usage
    exit
fi

pars="-Hn"
root="."
file="*"
depth=99
postproc=""
exclude=""
quiet=0
while getopts qicpr:n:f:e: flag
do
    case $flag in

        q)
            quiet=1
#            echo pars is $pars
            ;;
        e)
            exclude=$OPTARG
#            echo pars is $pars
            ;;
        i)
            pars+="i"
#            echo pars is $pars
            ;;
        p)
            pars="-l"
#            echo pars is $pars
            ;;
        c)
            # just count occurences, filter out files with not matching the string and revert sort the list
            pars="-Hnc"
            postproc="grep -v \":0\"| sort -t \":\" -nr -k 2"
#            echo pars is $pars
            ;;
        f)
            file=$OPTARG
#            echo file-pattern is $file
            ;;
        r)
            root=$OPTARG
#            echo root is $root
            ;;
        n)
            depth=$OPTARG
#            echo depth is $depth
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

string=$1
#echo string is $string

# postproc='xargs -I@ dirname @ | sort | uniq'
#cmd="find \"$root\" -maxdepth \"$depth\" \( -path \"*/.svn\" -prune -o -type f -name \"$file\" \)| xargs -I@ grep \"$pars\" \"$string\" @"
#cmd="find \"$root\" -maxdepth \"$depth\" \( -type d -name .svn -prune -o -type f -name \"$file\" \) | xargs -I@ grep \"$pars\" \"$string\" @"
if [ "$exclude" == "" ]; then
    #cmd="find \"$root\" -maxdepth \"$depth\" -type f -name \"$file\" | grep -v \".svn\|.git\" | xargs -I@ \grep --color \"$pars\" \"$string\" @"
    cmd="find \"$root\" -maxdepth \"$depth\" \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type f -name \"$file\" | xargs -I@ \grep --color \"$pars\" \"$string\" @"
else
    #cmd="find \"$root\" -maxdepth \"$depth\" -type f -name \"$file\" | grep -v \".svn\|.git\" | xargs -I@ sh -c \"\grep --color \\\"$pars\\\" \\\"$string\\\" @| \grep -v \\\"$exclude\\\"|\grep --color \\\"$string\\\"\""
    cmd="find \"$root\" -maxdepth \"$depth\" \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type f -name \"$file\" | xargs -I@ sh -c \"\grep --color \\\"$pars\\\" \\\"$string\\\" @| \grep -v \\\"$exclude\\\"|\grep --color \\\"$string\\\"\""
fi
if [ ! "$postproc" == "" ]; then
    cmd+="|$postproc"
fi
#find "$root" -maxdepth "$depth" -type f -name "$file"| xargs -I@ grep "$pars" "$string" @
if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
eval $cmd

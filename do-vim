#!/usr/bin/env bash

# Support Functions 
yell() { echo "$0: $*" >&2; }
die() { yell "$*"; exit 111; }
try() { "$@" || die "cannot $*"; }


# Usage help function
cmd=`basename $0`

function usage() {
  echo "Usage: $cmd [-h] [-t <task_name>|.] [-r] [-O|-o|-p] [<file>..]"
  echo "where:"
  echo "       -h                          : print this help"
  echo "       -t <task>                   : start/continue work on <task>"
  echo "       -t .                        : select task start/continue work on"
  echo "       -r                          : reset session about the <task>"
  echo "       -O|-o|-p                    : vim visualization mode"
}

# Arguments processing
task=""
vimopt=""
session_reset=0
while getopts ht:oOpr flag
do
  case $flag in
    r)
      session_reset=1
      ;;
    p)
      vimopt="-p"
      ;;
    O)
      vimopt="-O"
      ;;
    o)
      vimopt="-o"
      ;;
    t)
      task="$OPTARG"
      [ "$task" == "" ] && task="."
      ;;
    h)
      usage
      exit
      ;;
    ?)
      usage
      exit
      ;;
  esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument


if [ ! "$task" == "" ]; then
  if [ "$task" == "." ]; then
    (echo "NEW";ls -1 "$PROJECT_PATH" | grep "^task_.*\.vim$"| sed 's/^task_\(.*\)\.vim/\1/' | sort) | awk '{ printf "%-2s %-60s\n", NR, $0 }' | column -t
    read -p "task? " num

    if [ "$num" == "" ]; then
        exit
    fi
    if [ "$num" == "1" ]; then
      read -p "task name? " task
      task_name="task_$(echo "$task"| tr ' ' '_' | sed 's/^task_//')"
      task_filename="${task_name}.vim"
    else
      task_filename=$((echo "NEW";ls -1 "$PROJECT_PATH" | grep "^task_.*\.vim$" | sort)| awk '{ printf "%-2s %-60s\n", NR, $0 }'|grep "^$num "|sed 's/[ \t]\+/ /g'|cut -d' ' -f2)
      task_name="${task_filename%.vim}"
    fi
  elif [ $(echo "$task" | grep "^[0-9]\+$" | wc -l) -gt 0 ]; then
    num="$task"
    task="."
    [ $num -eq 1 ] && (echo "NEW";ls -1 "$PROJECT_PATH" | grep "^task_.*\.vim$"| sed 's/^task_\(.*\)\.vim/\1/' | sort) | awk '{ printf "%-2s %-60s\n", NR, $0 }' | column -t && exit
    task_filename=$((echo "NEW";ls -1 "$PROJECT_PATH" | grep "^task_.*\.vim$" | sort)| awk '{ printf "%-2s %-60s\n", NR, $0 }'|grep "^$num "|sed 's/[ \t]\+/ /g'|cut -d' ' -f2)
    task_name="${task_filename%.vim}"
  else
    task_name="task_${task}"
    task_filename="${task_name}.vim"
  fi
  task_path="$PROJECT_PATH/${task_filename}"
  if [ -f "$task_path" ]; then
    [ $session_reset -eq 1 ] && rm -f "$task_path"
    #\vi -S "$task_path" -c ":Obsession $task_path" -c ":VimNotebookOpen $task_name" "$vimopt" $@
    cmd="\vi -S \"$task_path\" -c \":Obsession $task_path\" -c \":VimNotebookOpen $task_name\" $vimopt $@"
  else
    if [ ! "$task" == "." ]; then
      #\vi -c ":Obsession $task_path" -c ":VimNotebookOpen $task_name" "$vimopt" $@
      cmd="\vi -c \":Obsession $task_path\" -c \":VimNotebookOpen $task_name\" $vimopt $@"
    else
      exit 1
    fi
  fi
  echo "> $cmd"
  eval "$cmd"
  exit
fi

\vi "$vimopt" $@

#!/usr/bin/env bash

cmd=`basename $0`

function usage() {
	echo "Usage: $cmd [-h] [-t <topic>] [-n] [<grep-expression>]"
	echo "where:"
	echo "       -h                          : print this help"
	echo "       -t <topic>                  : topic to search"
	echo "       -l <language>               : language to search"
	echo "       -q                          : quiet"
	echo "       -n                          : dry run"
}


quiet=0
topics=""
#language="language:lua"
language=""
sorting="sort=stars"
order="order=desc"
dryrun=0
while getopts hqt:l:n flag
do
	case $flag in
		n)
			dryrun=1
			;;
		q)
			quiet=1
			;;
		l)
			language="language:$OPTARG"
			;;
		t)
			if [ "$topics" == "" ]; then
				topics="topic:$OPTARG"
			else
				topics="$topics+topic:$OPTARG"
			fi
			;;
		h)
			usage
			exit
			;;
		?)
			usage
			exit
			;;
	esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

grep_expr=""
if [ $# -gt 0 ]; then
	grep_expr="$1"
fi

terms=""
for term in $@; do
	if [ "$terms" == "" ]; then
		terms="$term"
	else
		terms="$terms%20$term"
	fi
done

#if [ "$topics" == "" ]; then
#	echo "No topics to search for have been specified"
#	usage
#	exit
#fi

options=$(echo $terms $language $topics| tr ' ' '+')
cmd="curl -sS -H \"Authentication: token TOKEN\" -H \"Accept: application/vnd.github.mercy-preview+json\" \"https://api.github.com/search/repositories?q=$options&$sorting&$order\""
if [ $quiet -eq 0 ]; then
	echo "> $cmd"
fi
if [ $dryrun -eq 0 ]; then
    eval "$cmd"
fi

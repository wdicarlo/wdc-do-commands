#!/usr/bin/env bash

now=`date +%Y%m%d%H%M%S`

function usage()
{
    cmd=$(basename $0)
    echo "Usage: $cmd [-R] [-n] [-l] [-L] [-p] [-f] [-t] [-T] [-x] [-s <string_patt>] [<patch-file-pattern>]"
    echo "             -l               : list patches"
    echo "             -L               : list all patches"
    echo "             -R               : remove/revert patch"
    echo "             -n               : just print the patch"
    echo "             -t               : consider the last patch"
    echo "             -T               : consider the very last patch"
    echo "             -p               : just print the paths of the patches"
    echo "             -f               : force addition of new files"
    echo "             -x               : consider not only diff files"
    echo "             -s <string_patt> : search <string_patt> in patch files"
    echo "             -q               : quiet"
}

# TODO: check if new file present in the patch are not present in the working copy
opts=""
dryrun=0
last=0
paths=0
force=0
prompt=">"
quiet=0
list=0
all=0
filter=""
ext="\.diff\$"
search_patt=""
if [ ! -t 1 ]; then
    quiet=1
fi
while getopts hRntTpfqlLxs: flag
do
    case $flag in
        s)
            search_patt="$OPTARG"
            ;;
        x)
            ext="$"
            ;;
        l)
            list=1
            ;;
        L)
            list=1
            all=1
            ;;
        f)
            force=1
            ;;
        T)
            last=2
            ;;
        t)
            last=1
            ;;
        p)
            paths=1
            ;;
        n)
            dryrun=1
            prompt="#"
            ;;
        R)
            opts="-R"
            ;;
        q)
            quiet=1
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ ! "$search_patt" == "" ]; then
    filter=""
    if [ $# -gt 0 ]; then
        filter="|grep $1"
    fi
    #grep -RHn "^[+-].*$search_patt" $PATCHES_DIR/*|sed "s#$PATCHES_DIR/##"|grep --color "$search_patt"
    cmd="ls -1 $PATCHES_DIR $filter |sed 's#^#$PATCHES_DIR\/#'| xargs -I@ sh -c \"grep -Hn \\\"^[+-].*$search_patt\\\" @|sed \\\"s#$PATCHES_DIR/##\\\"|grep --color \\\"$search_patt\\\"\""
    if [ $quiet -eq 0 ]; then
        echo "> $cmd"
    fi
    eval "$cmd"
    exit
fi

if [ $list -eq 1 ]; then
    filter=""
    if [ $# -gt 0 ]; then
        filter="|grep --color $1"
    fi
    postproc=""
    if [ $paths -eq 1 ]; then
        postproc="|sed 's#^#$PATCHES_DIR\/#'"
    fi
    if [ $all -eq 1 ]; then
        cmd="ls -1 $PATCHES_DIR | grep $ext $postproc $filter"
    else
        cmd="ls -1t $PATCHES_DIR | grep $ext $filter | head -20 $postproc $filter"
    fi
    if [ $quiet -eq 0 ]; then
        echo "> $cmd"
    fi
    eval "$cmd"
    exit
fi

if [  $# -eq 0 ]
then
    usage
    exit
fi

patchfile="$1"
if [ ! -f "$patchfile" ]; then
    npatch=$(ls -1 $PATCHES_DIR | grep $ext |grep $1|wc -l)
    if [ $npatch -ne 1 ]; then
        if [ $last -eq 1 ]; then
            # check if patches with the same name
            npatch=$(ls -1 $PATCHES_DIR | grep $ext |grep $1| sed 's/-[0-9][0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9][0-9][0-9]-/-/'|sort|uniq|wc -l)
            if [ $npatch -ne 1 ]; then
                echo "Cannot find uniq patch file with: $1"
                ls -1t $PATCHES_DIR | grep $ext |grep --color $1
                exit
            else
                patch=$(ls -1t $PATCHES_DIR | grep $ext |grep $1|head -1)
            fi
        elif [ $last -eq 2 ]; then
            npatch=$(ls -1t $PATCHES_DIR | grep $ext |grep $1| head -1|wc -l)
            if [ $npatch -ne 1 ]; then
                echo "Cannot find uniq patch file with: $1"
                ls -1t $PATCHES_DIR | grep $ext |grep --color $1
                exit
            else
                patch=$(ls -1t $PATCHES_DIR | grep $ext |grep $1|head -1)
            fi
        else
            echo "Cannot find uniq patch file with: $1"
            ls -1t $PATCHES_DIR | grep $ext |grep --color $1
            exit
        fi
    else
        patch=$(ls -1t $PATCHES_DIR | grep $ext |grep $1)
    fi

    patchfile="$PATCHES_DIR/$patch"
fi

# TODO: check position extracting folder name from patch filename

added_files=$(cat $patchfile  |grep "revision 0" |sed 's/--- //'|sed 's/(revision 0)//'|do-pipe-trimmed) 
if [ $dryrun -eq 0 ]; then
    if [ ! "$added_files" == "" ]; then
        for file in $added_files;
        do
            if [ -f "$file" ]; then
                if [ $force -eq 0 ]; then 
                    echo "Adding files already present. Please remove them or force the patch"
                    echo "Adding: "
                    echo "$added_files"
                    exit
                else
                    echo "$prompt rm $file"
                    rm $file
                fi
            fi
        done
    fi
fi



if [ $paths -eq 1 ]; then
    cmd="ls $patchfile"
else
    if [ $dryrun -eq 0 ]; then
    	popt="-p0"
	if [ $(cat $patchfile|grep "^diff --git"|wc -l) -gt 0 ]; then
		popt="-p1"
	fi
        cmd="patch $popt $opts < $patchfile"
    else
        cmd="cat $patchfile"
    fi
fi
if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
eval "$cmd"

if [ $dryrun -eq 0 ]; then
    if [ "$added_files" != "" ]; then
        echo "Adding files: "
        echo "$added_files"
        for file in $added_files;
        do
            cmd="svn add --parents $file"
            echo "$prompt $cmd"
            eval "$cmd"
        done
    fi
fi

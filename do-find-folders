#!/usr/bin/env bash

cmd=`basename $0`

function usage() {
    #echo "Usage: $cmd [-i] [-p] [-c ][-r <root>] [-n <depth>] [-f <file-pattern>] <string>"
    echo "Usage: $cmd [-h] [-i] [-q] [-s] [-f] [-n <depth>] [[-r <folder>] ...] <string>"
    echo "where:"
    echo "       -i                 : ignore case"
    #echo "       -c                 : just count occurences"
    #echo "       -p                 : just print the paths"
    echo "       -s                 : strict folder name"
    echo "       -r <folder>        : add folder to the search"
    echo "       -n <depth>         : max depth to search into"
    echo "       -f <file-pattern>  : filename pattern to use"
    #echo "       -e <exclude-patt>  : exclude pattern"
    echo "       -q                 : quiet"
    exit
}

pars=""
file=""
depth=99
postproc=""
exclude=""
quiet=0
strict=0


#while getopts qicpr:n:f:e: flag
while getopts sqhir:f:n: flag
do
    case $flag in

        s)
            strict=1
            ;;
        q)
            quiet=1
            ;;
#        e)
#            exclude=$OPTARG
##            echo pars is $pars
#            ;;
        i)
            pars="-i"
            ;;
#        p)
#            pars="-l"
##            echo pars is $pars
#            ;;
#        c)
#            # just count occurences, filter out files with not matching the string and revert sort the list
#            pars="-Hnc"
#            postproc="grep -v \":0\"| sort -t \":\" -nr -k 2"
##            echo pars is $pars
#            ;;
        f)
            file=$OPTARG
            ;;
        r)
            root="$root $OPTARG"
            ;;
        n)
            depth=$OPTARG
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ "$root" == "" ]; then
    root="."
fi

gpat=""
if [ $# -gt 0 ]; then
    for pat in $@ 
    do
        if [ "$gpat" == "" ]; then
            gpat="$pat"
        else
            gpat="$gpat\|$pat"
        fi
    done
fi


if [ "$gpat" == "" ]; then
    cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type d "
    if [ !  $file == "" ]; then
        cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type f -name \"$file\" | xargs -I@ dirname @ | sort | uniq"
    fi
else
    if [ $strict -eq 0 ]; then
        cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type d | \grep --color $pars \"/[a-zA-Z0-9_-]*$gpat[a-zA-Z0-9_-]*$\""
    else
        cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type d | \grep --color $pars \"/$gpat$\""
    fi
    if [ !  $file == "" ]; then
        if [ $strict -eq 0 ]; then
            cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type f -name \"$file\" | xargs -I@ dirname @ | sort | uniq | \grep --color $pars \"/[a-zA-Z0-9_-]*$gpat[a-zA-Z0-9_-]*$\""
        else
            cmd="find $root/ -maxdepth $depth \( -type d -name .svn -prune -o -type d -name .git -prune \) -o -type f -name \"$file\" | xargs -I@ dirname @ | sort | uniq | \grep --color $pars \"/$gpat$\""
        fi
    fi
fi

if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
eval $cmd


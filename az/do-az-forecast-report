#!/usr/bin/env bash

function echoerr() { printf "%s\n" "$*" >&2; }

# Usage help function
cmd=`basename $0`

function usage() {
  echo "Usage: $cmd [-h]"
  echo "where:"
  echo "       -h                          : print this help"
  echo "       -l                          : list subscriptions to be considered"
}

# Arguments processing
list=0
while getopts hl flag
do
  case $flag in
    l)
      list=1
      ;;
    h)
      usage
      exit
      ;;
    ?)
      usage
      exit
      ;;
  esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

function qtr() {
  mon=$(date +'%m')
  y=$(date +'%Y')
  begin=""
  end=""
  if [ $mon -ge 1 -a $mon -le 3 ]; then
       qtr=1
       begin="$y-01-01"
       end="$y-03-31"
  elif [ $mon -ge 4 -a $mon -le 6 ]; then
       qtr=2
       begin="$y-04-01"
       end="$y-06-30"
  elif [ $mon -ge 7 -a $mon -le 9 ]; then
       qtr=3
       begin="$y-07-01"
       end="$y-09-30"
  elif [ $mon -ge 10 -a $mon -le 12 ]; then
       qtr=4
       begin="$y-10-01"
       end="$y-12-31"
  fi
  printf "%02d:%s:%s\n" $qtr $begin $end
}

[ "$(which az)" == "" ] && echoerr "Missing az command" && exit
[ $(az account list 2>&1 | grep -c "az login") -eq 1 ] && echo "Error: not logged in" && exit 1 

period=$(date +"%m")
week=$(date +"%U")
year=$(date +"%Y")
IFS=':' read -r quarter begin end <<< $(qtr)
drange="$begin:$end"
report=azure_forecast_${year}_q${quarter}_p${period}_w${week}.csv

[ "$AZ_SUBSCRIPTIONS_PATT_IN" == "" ] && AZ_SUBSCRIPTIONS_PATT_IN="^"
[ "$AZ_SUBSCRIPTIONS_PATT_OUT" == "" ] && AZ_SUBSCRIPTIONS_PATT_OUT="^$"
[ $list -eq 1 ] && (do-az-subscriptions | grep "$AZ_SUBSCRIPTIONS_PATT_IN" | grep -v "$AZ_SUBSCRIPTIONS_PATT_OUT") && exit


do-az-subscriptions | grep "$AZ_SUBSCRIPTIONS_PATT_IN" | grep -v "$AZ_SUBSCRIPTIONS_PATT_OUT" | while IFS=',' read sub id; do do-az-forecast -d "$drange" -u -s "$sub,$id"; done
do-az-subscriptions | grep "$AZ_SUBSCRIPTIONS_PATT_IN" | grep -v "$AZ_SUBSCRIPTIONS_PATT_OUT" | 
  while IFS=',' read sub id
  do 
    echo "$sub,$(cat "$sub.csv"|grep -v "^tot"|tail -1)"
  done > "$report"
echo "Generated report: $report" 

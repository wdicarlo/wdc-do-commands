#!/usr/bin/env bash

[ "$(which az)" == "" ] && echo "Missing az command" && exit

# Usage help function
cmd=$(basename $0)

function usage() {
  echo "Usage: $cmd [-h] [-s <subscription-name>] [-g <rg-name>] [-k <k8s-name>] [-o]"
  echo "where:"
  echo "       -h                          : print this help"
  echo "       -s <subscription-name>      : subscription"
  echo "       -g <rg-name>                : resource group name"
  echo "       -k <k8s-name>               : k8s cluster name"
  echo "       -o                          : print the config"
}

# Arguments processing for sources script
print=0
cluster=""
while getopts hs:g:ok: flag
do
  case $flag in
    k)
      cluster="$OPTARG"
      ;;
    s)
      AZ_SUBSCRIPTION_NAME="$OPTARG"
      ;;
    g)
      RESOURCE_GROUP_NAME="$OPTARG"
      ;;
    o)
      print=1
      ;;
    h)
      usage
      exit
      ;;
    ?)
      usage
      exit
      ;;
  esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

# shellcheck disable=SC2086
if [ -z ${AZ_SUBSCRIPTION_NAME} ] || [ "$AZ_SUBSCRIPTION_NAME" == "" ]; then
	echo "AZ_SUBSCRIPTION_NAME not defined!"
	exit 1
fi
# shellcheck disable=SC2086
if [ -z ${RESOURCE_GROUP_NAME} ] || [ "$RESOURCE_GROUP_NAME" == "" ]; then
	echo "RESOURCE_GROUP_NAME not defined!"
	exit 1
fi

CLUSTER_NAME="$(echo $RESOURCE_GROUP_NAME|tr '_' '-')-k8s"
[ "$cluster" != "" ] && CLUSTER_NAME="$cluster"

cmd="az aks get-credentials --subscription $AZ_SUBSCRIPTION_NAME --name $CLUSTER_NAME --resource-group ${RESOURCE_GROUP_NAME}"

[ $print -eq 1 ] && cmd="$cmd --file -"
[ $print -eq 0 ] && echo "> $cmd"
eval "$cmd"

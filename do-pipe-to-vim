#!/usr/bin/env bash

function usage() {
    echo "Usage: pipe | do-pipe-to-vim [-h] [-d] [-o|-O] [-p] [-c <ex_commands>]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -o|-O                       : H/V split mode"
    echo "       -p                          : tab mode"
    echo "       -d                          : use diff filetype"
    echo "       -c <ex_commands>            : run ex_commands"
}

if [ -t 0 ]; then
    cmd=`basename $0`
    echo "$cmd must be used in a pipe"
    usage
    exit
fi


vcmd=":vnew"
diff=0
ex_cmds=""
while getopts hoOpdc: flag
do
    case $flag in
        c)
            ex_cmds="$OPTARG"
            ;;
        d)
            diff=1 
            ;;
        o)
            vcmd=":new"
            ;;
        O)
            vcmd=":vnew"
            ;;
        p)
            vcmd=":tabnew"
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

cmds=""
for file in $@;
do
    if [ -f "$file" ]; then
        cmds="$cmds -c \"$vcmd $file\""
    fi
done

if [ $diff -eq 1 ]; then
	cmds="$cmds -c \":set filetype=diff\""
fi

if [ ! "$ex_cmds" == "" ]; then
	cmds="$cmds -c \"$ex_cmds\""
fi

cmd="vim -R $cmds -"
eval "cat|$cmd"

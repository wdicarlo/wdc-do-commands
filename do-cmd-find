#!/usr/bin/env bash
#

# Usage help function
cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-q] [-f] [-c] [-a] [-o] [-r <root>] <string>"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -f                          : find the filenames"
    echo "       -c                          : find in all commands (even not versioned)"
    echo "       -a                          : find in all files (even not versioned)"
    echo "       -o                          : find only in the options"
    echo "       -r                          : find in the <root> folder"
    echo "       -q                          : quiet"
}

# Arguments processing
quiet=0
all=0
options=0
files=0
root="$WDC_DO_COMMANDS_DIR"
while getopts hqaocfr: flag
do
    case $flag in
	r)
	    root="$OPTARG"
	    ;;
	o)
	    options=1
	    ;;
	f)
	    files=1
	    ;;
	c)
	    all=1
	    ;;
	a)
	    all=2
	    ;;
	q)
	    quiet=1
	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ $# == 0 ]; then
    usage
    exit
fi

[ ! -d "$root" ] && echo "Wrong command folder: $root" && exit

cd "$root"
cmd="git ls-files | grep \"^do[-_].*\""
if [ $all -eq 1 ]; then
    cmd="find . -maxdepth 1 -name \"do[-_]*\" | sed 's#^\.\/##'"
elif [ $all -eq 2 ]; then
    cmd="find . -not -path \"./.git/*\" -type f | sed 's#^\.\/##'"
fi

if [ $files -eq 1 ]; then
    cmd="$cmd | grep $@"
else
    if [ $options -eq 0 ]; then
        cmd="$cmd | xargs -I@ \grep --color -Hn $@ @"
    else
        cmd="$cmd | xargs -I@ grep -Hn \"getopts.*h\" @ |sed 's/^\([a-z-]*\):.*/\1/'|sort|uniq|xargs -I@ sh -c \"@ -h\"| \grep --color \"do[-_][a-z_-]*\|$@\""
    fi
fi

# Quieting command output
if [ $quiet -eq 0 ]; then
    echo "> $cmd"
fi
eval $cmd

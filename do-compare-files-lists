#!/usr/bin/env bash

cmd=$(basename $0)
tmp=$(echo ~/tmp)
cwd=$(pwd)

function usage() {
    echo "Usage: $cmd [[-f<filename-pattern>]..] <dir1> <dir2>"
}

if [ $# == 0 ]; then
    usage
    exit
fi

quiet=0
filenames=""
if [ ! -t 1 ]; then
    quiet=1
fi
while getopts hqf: flag
do
    case $flag in
        f)
            if [ "$filenames" == "" ]; then
                filenames="-name \"$OPTARG\""
            else
                filenames="$filenames -or -name \"$OPTARG\""
            fi
            ;;
        q)
            quiet=1
            ;;
        h)
            usage
            exit
            ;;
        ?)
            usage
            exit
            ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument


if [ ! -d $1 ]
then
    echo "$1 is not a folder"
    exit
fi
if [ ! -d $2 ]
then
    echo "$2 is not a folder"
    exit
fi

if [ ! -d $tmp ]; then
        mkdir $tmp
fi

list1=$(echo $1|tr '\/' '@')
list2=$(echo $2|tr '\/' '@')

[ $DEBUG=="debug" ] && echo "filenames=$filenames"
cmd="cd $1&&pwd&&\$(find . $filenames | sort > $tmp/$list1.files)&&cd ${cwd}"
echo "> $cmd"
eval "$cmd"
cmd="cd $2&&pwd&&\$(find . $filenames | sort > $tmp/$list2.files)&&cd ${cwd}"
echo "> $cmd"
eval "$cmd"

if [ ! -f $tmp/$list1.files ]
then
    echo "Cannot compare folder files lists"
    exit
fi
if [ ! -f $tmp/$list2.files ]
then
    echo "Cannot compare folder files lists"
    exit
fi

vimdiff $tmp/$list1.files $tmp/$list2.files

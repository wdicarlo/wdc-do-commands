#!/usr/bin/env bash

cmd=`basename $0`

function quote () { 
    local quoted=${1// /%20};
    quoted=${quoted//=/%3D};
    quoted=${quoted//,/%2C};
    printf "%s" "$quoted"
}
function usage() {
	echo "Usage: $cmd [-h] [-p <num_pages>] [-q] [-n] [-i <num_items_per_pages>] [-s <sec_to_sleep>] <project_id>>"
	echo "where:"
	echo "       -s <sec_to_sleep>           : seconds to sleep after each request"
	echo "       -i <num_items_per_pages>    : number of items per page to retrieve"
	echo "       -p <num_pages>              : number of pages to retrieve"
	echo "       -h                          : print this help"
	echo "       -q                          : quiet"
	echo "       -n                          : dry run"
}


quiet=0
dryrun=0
pages=1
items=20
seconds=0
while getopts hqnp:i:s: flag
do
	case $flag in
		s)
			seconds=$OPTARG
			;;
		i)
			items=$OPTARG
			;;
		p)
			pages=$OPTARG
			;;
		n)
			dryrun=1
			;;
		q)
			quiet=1
			;;
		h)
			usage
			exit
			;;
		?)
			usage
			exit
			;;
	esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ $# -eq 0 ]; then
    echo "Missing project key"
    exit 1
fi

if [ "$JIRA_SERVER" == "" ]; then
    echo "JIRA_SERVER not defined"
    exit
fi

if [ "$DEVOPS_USER" == "" ]; then
    echo "DEVOPS_USER not defined"
    exit
fi

if [ "$DEVOPS_PASSWORD" == "" ]; then
    echo "DEVOPS_PASSWORD not defined"
    exit
fi

url_api="https://$JIRA_SERVER/rest/api/2/search"
jql="project = $1 ORDER BY priority DESC, updated DESC" # search all issues whatever are their status
jql_url=$(quote "$jql")


opts=""
if [ $quiet -eq 1 ]; then
    opts="-sS"
fi

concatenate=0
if [ $pages -gt 1 ]; then
    concatenate=1
    echo "["
fi

for counter in $(seq 1 $pages);
do
    startAt=$(( ($counter - 1) * $items))

    cmd="curl -sS -XH -u $DEVOPS_USER:$DEVOPS_PASSWORD -X GET -H \"Content-Type: application/json\" \"$url_api?startAt=$startAt&maxResults=$items&jql=$jql_url\""
    if [ $quiet -eq 0 ]; then
       echo "> $cmd"
    fi
    if [ $dryrun -eq 0 ]; then
        if [ $concatenate -eq 0 ]; then
           eval "$cmd | jq ."
        else
           if [ $counter -lt $pages ]; then
               eval "$cmd | jq . | tail +7 | head -n -3" # remove first 7 lines and last 3 
               echo "   },"
           else
               eval "$cmd | jq . | tail +7 | head -n -2" # remove first 7 lines and last 2 
           fi
        fi
    fi
    if [ $counter -lt $pages ] && [ $seconds -gt 0 ]; then
        if [ $quiet -eq 0 ]; then
           echo "waiting $seconds secs..."
        fi

        sleep $seconds
    fi
done
if [ $dryrun -eq 0 ]; then
    if [ $concatenate -eq 1 ]; then
        echo "]"
    fi
fi

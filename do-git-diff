#!/usr/bin/env bash

cmd=`basename $0`

function usage() {
    echo "Usage: $cmd [-h] [-q] [-s] [-a] [<file>..<file>|file_pattern>]"
    echo "where:"
    echo "       -h                          : print this help"
    echo "       -s                          : diff of staged changes"
    echo "       -a                          : show all diffs"
    echo "       -q                          : quiet"
}


piping=1
quiet=1
staged=0
all=0
while getopts hqsa flag
do
    case $flag in
	a)
	    all=1
	    ;;
	q)
	    quiet=1
	    ;;
	s)
	    staged=1
	    ;;
	h)
	    usage
	    exit
	    ;;
	?)
	    usage
	    exit
	    ;;
    esac
done
shift $(( OPTIND - 1 ))  # shift to the last flag or argument

if [ -t 1 ]; then # check if piping to output stream
	piping=0
	quiet=0
fi
opts="-w"
if [ $all -eq 1 ]; then
	opts=""
fi
if [ $piping -eq 0 ]; then
	opts="$opts --color=always"
fi
if [ $staged -eq 1 ]; then
	opts="$opts --staged"
fi

files="$@"
if [ $# -eq 1 ]; then
	rev=$(git rev-list --all| grep $1 | wc -l)
	if [ $rev -eq 1 ]; then
		rev=$(git rev-list --all| grep $1)
		files="$rev~..$rev"
	elif [ ! -f "$1" ]; then
		files=$(git diff --name-only|grep $1)
	fi
fi

#cmd="git diff -w $opts $files | sed \"s/^+[[:space:]]*$/+/g\" | sed \"s/^+\\(.*[;}>]\\)[[:space:]]*$/+\\1/\""
cmd="git diff $opts $files | do-pipe-diff-without-useless-whitespaces"
if [ $quiet -eq 0 ]; then
	echo "> $cmd"
fi
eval $cmd

#!/usr/bin/env bash

# example of input file: $1_memcallseq.txt
# 307752.983:#f-4 3384248 14ad7c8
# 307753.042:#f-15 3384248 14ad7c8
# 307753.064:#f-25 3384248 14ad7c8
# 307753.084:#f-41 3384248 14ad7c8
# 307753.103:#f-53 3384248 14ad7c8
# 307753.121:#f-71 3384248 14ad7c8
# 307753.140:#f-83 3384248 14ad7c8
# 307753.159:#f-95 3384248 14ad7c8
# 307753.178:#f-107 3384248 14ad7c8
# 307753.196:#f-119 3384248 14ad7c8
# 307753.216:#f-131 3384248 14ad7c8
# 307753.235:#f-141 3384248 14ad7c8
# 307753.255:#f-157 3384248 14ad7c8
# 307753.275:#f-173 3384248 14ad7c8
# 307753.294:#f-187 3384248 14ad7c8
# 307753.314:#f-199 3384248 14ad7c8
# 307753.333:#f-212 3384248 14ad7c8
# 307753.352:#f-225 3384248 14ad7c8
# 307753.371:#f-240 3384248 14ad7c8
# 307753.390:#f-256 3384248 14ad7c8


# example of input file: $1_memcallcounters.txt
# 
#    caller   malloc calloc  h_a_p  h_a_s  h_a_u   free  h_f_p  h_f_s
# ---------------------------------------------------------------
#  00004babe0      0      0      2      0      0      0      0      0
#  0002ae3498      0      0      0      1      0      0      0      0
#  0001ce8748      0      0      0      1      0      0      0      0
#  000242b0f0      0      0      0      2      0      0      0      0
#  000220eac8      0      0      0      1      0      0      0      0
#  0002210f2c      0      0      0      4      0      0      0      1
#  0002212704      0      0      0      1      0      0      0      0
#  ...
#  0003248850      0      0      0      0      0      2      0      0
#  0001344a80     13      0      0      0      0      0      0      0
#  000147c970      0      0      0      0      0    287      0      0
#  00036a9600      2      0      0      0      0      0      0      0
# 
# Summary: 300359  malloc() - 0  calloc() - 1022 heap_alloc_private()- 84009 heap_alloc_shared()  - 2976 heap_alloc_unsafe() 
# 	- 337145 free()  - 261 heap_free_private() - 70464 heap_free_shared() [ 7813 callers ]

if [ ! $# -eq 1 ]; then
   echo "Wrong parameters"
   exit
fi

if [ ! -f ec_core.elf ]; then
   echo "Missing file ec_core.elf"
   exit
fi

if [ ! -f $1_memcallseq.txt ]; then
   echo "Missing file $1.txt"
   exit
fi

if [ ! -f $1_memcallcounters.txt ]; then
   echo "Missing file $1_memcallcounters.txt"
   exit
fi

cat $1_memcallseq.txt | do-pipe-trimmed -a | do-pipe-columns 2 |grep -v "^[a-z]\+" | sort | uniq -c | sort -s -n -r > $1_memcallseq_1clev.txt 
cat $1_memcallseq.txt | do-pipe-trimmed -a | do-pipe-columns 3 |grep -v "^[a-z]\+" | sort | uniq -c | sort -s -n -r > $1_memcallseq_2clev.txt 

# cat $1 | sed -e 's/.*#[af]-*\([0-9]\+\) .*/\1/' | do-pipe-column-increment

nm ec_core.elf | sort > ec_core.txt

#(cat $1_1clev.txt | do-pipe-trimmed -a | do-pipe-columns 2; nm ec_core.elf ) | grep -v "^[ \t]\+" | sort | grep -v "^[0-9a-f]* [tTBaWrRVDdGSbA] " -B1 > $1_1clev_symbols.txt
#(cat $1_2clev.txt | do-pipe-trimmed -a | do-pipe-columns 2; nm ec_core.elf ) | grep -v "^[ \t]\+" | sort | grep -v "^[0-9a-f]* [tTBaWrRVDdGSbA] " -B1 > $1_2clev_symbols.txt



(cat $1_memcallseq_1clev.txt | do-pipe-trimmed | do-pipe-columns 2 | sed -e 's/^/0/';cat ec_core.txt ) | sort | do-pipe-master-slave-rows "^[0-9a-f]\+ [tTBaWrRVDdGSbA] " "^[0-9a-f]\+$" > $1_memcallseq_1clev_symbols.txt
(cat $1_memcallseq_2clev.txt | do-pipe-trimmed | do-pipe-columns 2 | sed -e 's/^/0/';cat ec_core.txt ) | sort | do-pipe-master-slave-rows "^[0-9a-f]\+ [tTBaWrRVDdGSbA] " "^[0-9a-f]\+$" > $1_memcallseq_2clev_symbols.txt

cat $1_memcallcounters.txt | grep "^[0-9a-f]\+" | sed -e 's/^ 00//' | sort > $1_memcallcounters_filtered.txt

(cat $1_memcallcounters_filtered.txt | grep "^[0-9a-f]\+";cat ec_core.txt ) | do-pipe-mem-func-calls > $1_memcallcounters_symbols.txt
